@using Signum.Utilities.ExpressionTrees
@using Signum.Web.Profiler
@model IOrderedEnumerable<SqlProfileResume>
@{           
    SqlProfileResumeOrder order = ViewBag.Order;
}
<table class="table sf-stats-table">
    <thead>
        <tr>
            <th>
                Query
            </th>
            <th class="@(order == SqlProfileResumeOrder.Count ? "sf-header-sort-up" : "")">
                @Html.ActionLink("Count", (ProfilerController pc) => pc.Statistics(SqlProfileResumeOrder.Count))
            </th>
            <th class="@(order == SqlProfileResumeOrder.Sum ? "sf-header-sort-up" : "")">
                @Html.ActionLink("Sum", (ProfilerController pc) => pc.Statistics(SqlProfileResumeOrder.Sum))
            </th>
            <th class="@(order == SqlProfileResumeOrder.Avg ? "sf-header-sort-up" : "")">
                @Html.ActionLink("Avg", (ProfilerController pc) => pc.Statistics(SqlProfileResumeOrder.Avg))
            </th>
            <th class="@(order == SqlProfileResumeOrder.Min ? "sf-header-sort-up" : "")">
                @Html.ActionLink("Min", (ProfilerController pc) => pc.Statistics(SqlProfileResumeOrder.Min))
            </th>
            <th class="@(order == SqlProfileResumeOrder.Max ? "sf-header-sort-up" : "")">
                @Html.ActionLink("Max", (ProfilerController pc) => pc.Statistics(SqlProfileResumeOrder.Max))
            </th>
            <th>
               References
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td><a class="sf-stats-show" href="javascript:void(0)">Show</a></td>
                <td>@item.Count</td>
                <td>@item.Sum.NiceToString()</td>
                <td>@item.Avg.NiceToString()</td>
                <td>@item.Min.NiceToString()</td>
                <td>@item.Max.NiceToString()</td>
                <td>
                   @foreach (var r in item.References.Iterate())
                   {
                       @Html.ActionLink(r.Value.FullKey + " " + r.Value.Elapsed.NiceToString().Trim(), (ProfilerController pc) => pc.HeavyRoute(r.Value.FullKey))
                       if (!r.IsLast)
                       {
                           <text>|</text> 
                       }
                   }
                </td>  
            </tr>
            <tr style="display:none">
            <td colspan="7">
            <pre style="width:1500px" >@item.Query</pre>
            </td>
            </tr>
        }
        
    </tbody>
</table>