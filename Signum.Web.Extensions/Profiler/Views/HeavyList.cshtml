@using Signum.Utilities.ExpressionTrees
@using Signum.Web.Profiler
@model List<HeavyProfilerEntry>
@{
    bool orderByTime = ViewBag.OrderByTime;
}
<h2>@ViewData[ViewDataKeys.Title]</h2>
<div class="row">
    <div class="col-sm-6">
        @Html.Partial(ProfilerClient.ViewPrefix.Formato("ProfilerButtons"))
        <div>
            <br />
            @Html.ActionLink(orderByTime ? "Order by ID" : "Order by Time", (ProfilerController pc) => pc.Heavy(!orderByTime))
            <br />
            @Html.ActionLink("Slowest SQLs", (ProfilerController pc) => pc.Statistics(SqlProfileResumeOrder.Sum))
        </div>
    </div>

    <div class="col-sm-6" style="text-align: right">
        @Html.ActionLink("Download", (ProfilerController pc) => pc.DownloadFile(null), new { @class = "btn btn-default" })
        @using (Html.BeginForm((ProfilerController pc) => pc.UploadFile(), new { enctype = "multipart/form-data", encoding = "multipart/form-data" }))
        {
            <input type="file" name="xmlFile" style="display: inline" />
            <input type="submit" value="Upload" class="btn btn-default" />
        }
    </div>
</div>

@if (Model != null)
{
    <br />
    <h3>Entries</h3>
    <div class="sf-profiler-chart" data-detail-url="@Url.Action("HeavyRoute", "Profiler")">
    </div>
    <br />
}

@Html.ScriptCss("~/Profiler/Content/Profiler.css")

<script language="javascript">

    $(function () {
        @(ProfilerClient.Module["heavyListChart"](Model.HeavyDetailsToJson()));
    });
</script>
