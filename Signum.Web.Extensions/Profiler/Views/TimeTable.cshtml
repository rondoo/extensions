@using System.Configuration
@using System.Drawing
@{  
    ViewBag.Title = "Times table";
}
<h3>Times table</h3>
@Html.ActionLink("Clear", (Signum.Web.Profiler.ProfilerController a) => a.ClearTimesTable(), new { @class = "btn btn-default" })
<table class="table table-nonfluid">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Entity
            </th>
            <th>
                Executions
            </th>
            <th>
                Last Time
            </th>
            <th>
                Min
            </th>
            <th>
                Average
            </th>
            <th>
                Max
            </th>
            <th>
                total
            </th>
        </tr>
    </thead>
    @{ var times = TimeTracker.IdentifiedElapseds;}
    @if (times.Count > 0)
    {

        Func<float, string> getColor = f => ColorTranslator.ToHtml(ColorExtensions.Interpolate(Color.FromArgb(255, 255, 255), f, Color.FromArgb(255, 0, 0)));

        var max = new
        {
            Count = (float)times.Values.Max(a => a.Count),
            LastTime = (float)times.Values.Max(a => a.LastTime),
            MinTime = (float)times.Values.Max(a => a.MinTime),
            Average = (float)times.Values.Max(a => a.Average),
            MaxTime = (float)times.Values.Max(a => a.MaxTime),
            TotalTime = (float)times.Values.Max(a => a.TotalTime),
        };
        <tbody>
            @foreach (var pair in times)
            {
                <tr style="background: #FFFFFF">
                    <td>
                        <span class="processName">@pair.Key.Split(' ')[0]</span>
                    </td>
                    <td>
                        @if (pair.Key.Split(' ').Length > 1)
                        {<span class="entityName">@pair.Key.Split(' ')[1]</span>}
                    </td>
                    <td class="centered" style="background:@getColor(pair.Value.Count / max.Count)">@pair.Value.Count
                    </td>
                    <td class="right" style="background:@getColor(pair.Value.LastTime/max.LastTime)">@pair.Value.LastTime
                    </td>
                    <td class="right" style="background:@getColor(pair.Value.MinTime / max.MinTime)">@pair.Value.MinTime
                    </td>
                    <td class="right" style="background:@getColor((float)pair.Value.Average / max.Average)">@pair.Value.Average
                    </td>
                    <td class="right" style="background:@getColor(pair.Value.MaxTime / max.MaxTime)">@pair.Value.MaxTime
                    </td>
                    <td class="right" style="background:@getColor(pair.Value.TotalTime / max.TotalTime)">@pair.Value.TotalTime
                    </td>
                </tr>
            }
        </tbody>
    }
</table>
