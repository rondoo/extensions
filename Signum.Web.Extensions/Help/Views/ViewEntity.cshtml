@using Signum.Entities.Reflection
@using Signum.Engine
@using Signum.Engine.Help
@using Signum.Web.Help
@using Signum.Web.Extensions
@using Signum.Entities.DynamicQuery
@using Signum.Entities.Basics
@section head
{
    @Html.ScriptCss("~/help/Content/help.css")
}
@{ Html.RenderPartial(HelpClient.Menu);}
@{ EntityHelp eh = (EntityHelp)Model;
   ViewBag.Title = eh.Type.NiceName();
}
<form action="@HelpLogic.EntityUrl(eh.Type)/Save" id="form-save">
<div id="entityName">
    <span class='shortcut'>[e:@eh.Type.Name]</span>
    <h1 title="@eh.Type.Namespace">@eh.Type.NiceName()</h1>
    @Html.TextArea("description", eh.Description, 5, 80, new { @class = "editable" })
    <span class="editor" id="description-editor">
        @Html.WikiParse(eh.Description, HelpClient.DefaultWikiSettings)
    </span>
</div>
<div id="entityContent" class="help_left">
    @if (eh.Properties != null && eh.Properties.Count > 0)
    {
        <div id="properties">
            <h2>
                Propiedades</h2>
            <dl>
                @{ 
        var a = TreeHelper.ToTreeS(eh.Properties, kvp =>
        {
            string s = kvp.Key.TryBeforeLast('.') ?? kvp.Key.TryBeforeLast('/');
            if(s == null)
                return null;

            if (s.StartsWith("[")) // Mixin
                return null;
            
            return new KeyValuePair<string, PropertyHelp>(s, eh.Properties[s]);
        });
        ViewDataDictionary vdd = new ViewDataDictionary();
        vdd.Add("EntityName", eh.Type.Name);
                }
                @foreach (var node in a)
                {
                    Html.RenderPartial(HelpClient.ViewEntityPropertyUrl, node, vdd);
                }
            </dl>
        </div>
    }
    @if (eh.Queries.Try(queries => queries.Count > 0) != null)
    {
        <div id="queries">
            <h2>
                Consultas</h2>
            <dl>
                @foreach (var mq in eh.Queries)
                {
                    <span class='shortcut'>[q:@QueryUtils.GetQueryUniqueKey(mq.Key)]</span>
                    <dt>@QueryUtils.GetNiceName(mq.Key)</dt>
                    <dd>
                        <img src='help/Images/table.gif' title='Ver columnas' style='float: right' onclick="javascript:$(this).siblings('.query-columns').toggle('fast');" />
                        @Html.WikiParse(mq.Value.Info, HelpClient.DefaultWikiSettings)
                        @Html.TextArea("q-" + QueryUtils.GetQueryUniqueKey(mq.Key).Replace(".", "_"), mq.Value.UserDescription, new { @class = "editable" })
                        <span class="editor" id="q-@QueryUtils.GetQueryUniqueKey(mq.Key).Replace(".", "_")-editor">
                            @Html.WikiParse(mq.Value.UserDescription, HelpClient.DefaultWikiSettings)
                        </span>
                        <div class='query-columns'>
                            <hr />
                            <table width="100%">
                                @foreach (var qc in mq.Value.Columns)
                                {
                                    <tr>
                                        <td>
                                            <b>@qc.Value.Name.NiceName()</b>
                                        </td>
                                        <td> @Html.WikiParse(qc.Value.Info, HelpClient.DefaultWikiSettings)
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                        </td>
                                        <td>@Html.TextArea("c-" + QueryUtils.GetQueryUniqueKey(mq.Key).Replace(".", "_") + "." + qc.Key, qc.Value.UserDescription, new { @class = "editable" })
                                            <span class="editor" id="qc-@(QueryUtils.GetQueryUniqueKey(mq.Key).Replace(".", "_") + "." + qc.Key)">
                                                @Html.WikiParse(qc.Value.UserDescription, HelpClient.DefaultWikiSettings)
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </table>
                            <hr />
                        </div>
                    </dd>
                }
            </dl>
        </div>
    }
    @if (eh.Operations != null && eh.Operations.Count > 0)
    {
        <div id="operations">
            <h2>
                Operaciones</h2>
            <dl>
                @foreach (var p in eh.Operations)
                {
                    <span class='shortcut'>[o:@p.Key.Key]</span>
                    <dt>@p.Key.NiceToString()</dt>
                    <dd>
                        @Html.WikiParse(p.Value.Info, HelpClient.DefaultWikiSettings)
                        @Html.TextArea("o-" + p.Key.Key, p.Value.UserDescription, new { @class = "editable" })
                        <span class="editor" id="o-@p.Key.Key.Replace(".", "_")-editor">
                            @Html.WikiParse(p.Value.UserDescription, HelpClient.DefaultWikiSettings)
                        </span>
                    </dd>
                }
            </dl>
        </div>
    }
</div>
<div class="help_right">
    <div class="sidebar">
        <h3>
            Temas relacionados</h3>
        <ul>
            @{ List<Type> types = (List<Type>)ViewData["nameSpace"];}
            @foreach (Type t in types)
            {
                if (t != eh.Type)
                {
                <li><a href="@HelpLogic.EntityUrl(t)">@t.NiceName()</a></li>
                }
                else
                {
                <li class="type-selected">@t.NiceName()</li>
                }
            }
        </ul>
    </div>
</div>
<div class="clearall">
</div>
</form>
