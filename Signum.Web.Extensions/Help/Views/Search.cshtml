@using Signum.Entities.Reflection
@using Signum.Engine.Help
@using Signum.Engine.WikiMarkup
@using Signum.Web.Help
@using Signum.Web.Extensions
@using Signum.Entities.Help

@section head
{
    @Html.ScriptCss("~/help/Content/help.css")
}

<script type="text/javascript">
    function ShowMore(elem) {
        $(elem).siblings("ul").children(".show-on-more").show();
        $(elem).hide();
    }
</script>

<div id="entityContent">
    <h1 class="centered"><a href="@Url.Action((HelpController hc)=>hc.Index())">@HelpMessage.Help.NiceToString()</a></h1>
@using (Html.BeginForm("Search", "Help", FormMethod.Get, new { id = "form-search-big" }))
{
    <div class="input-group">
        <input type="text" class="form-control" placeholder="@HelpSearchMessage.Search.NiceToString()" name="q" value="@Request.Params["q"]" />
        <div class="input-group-btn">
            <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
        </div>
    </div>
}
    @{ List<List<SearchResult>> results = (List<List<SearchResult>>)Model;
       string q = Request.Params["q"];
       int count = results.Count;
    }
    <p id="title">
        @HelpSearchMessage._0ResultsFor1In2.NiceToString().ForGenderAndNumber(number: count).FormatHtml(count, new HtmlTag("b").SetInnerText(q), ViewData["time"])
    </p>
    <hr />
    @foreach (var v in results)
    {
        int currentResults = 0;

        var first = v.First();
        
        <h4><a href="@first.Link">@(first.Type?.NiceName() ?? first.ObjectName)</a> <small>(@first.TypeSearchResult.NiceToString())</small></h4>
            
        <ul>
            @foreach (var sr in v)
            {
                currentResults++;               

                <li>
                    @if (first.TypeSearchResult == TypeSearchResult.Type &&
                        (sr.TypeSearchResult == TypeSearchResult.Operation ||
                         sr.TypeSearchResult == TypeSearchResult.Property ||
                         sr.TypeSearchResult == TypeSearchResult.Query))
                    {
                        <a href="@sr.Link">@Html.WikiParse(sr.ObjectName, HelpWiki.NoLinkWikiSettings)</a>
                    }
                    @Html.WikiParse(sr.Description, HelpWiki.NoLinkWikiSettings)
                </li>
            }
        </ul>
        <hr />
    }
</div>
