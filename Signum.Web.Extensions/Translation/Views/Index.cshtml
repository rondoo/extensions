@model Dictionary<Assembly, Dictionary<CultureInfo, TranslationFile>>
@using System.Reflection
@using Signum.Web.Translation.Controllers
@using System.Globalization;
@using Signum.Entities.Translation
@{
    ViewBag.Title = TranslationMessage.CodeTranslations.NiceToString();        
}
@Html.ScriptCss("~/Translation/Content/Translation.css")

@if (Model.IsEmpty())
{
    <h2>@TranslationMessage.NothingToTranslate.NiceToString()</h2>   
}
else
{
    <h2>@ViewBag.Title</h2>
    
    var langs = Model.First().Value.Keys;

    <table class="st">
        <tr>
            <th></th>
            <th>@TranslationMessage.All.NiceToString()</th>
            @foreach (var ci in langs)
            {
                <th>@ci.Name</th>
            }
        </tr>
        @foreach (var assembly in Model)
        {
            <tr>
                <th>@assembly.Key.GetName().Name</th>
                <td>
                    @Html.ActionLink(TranslationMessage.View.NiceToString(), (TranslationController tc) => tc.View(assembly.Key.GetName().Name, null, false, null))
                </td>
                @foreach (var tf in assembly.Value.Values)
                {
                    <td>
                        @Html.ActionLink(TranslationMessage.View.NiceToString(), (TranslationController tc) => tc.View(tf.Assembly.GetName().Name, tf.CultureInfo.Name, false, null))
                        <br />
                        @if (!tf.IsDefault && tf.CultureInfo.IsNeutralCulture)
                        {
                        @Html.ActionLink(TranslationMessage.Sync.NiceToString(), (TranslationController tc) => tc.Sync(tf.Assembly.GetName().Name, tf.CultureInfo.Name), new { @class = "status-" + tf.Status().ToString() })    
                        }
                    </td>
                }
            </tr>
        }
    </table>
}