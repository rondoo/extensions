@using System.Configuration
@using Signum.Entities.Dashboard
@using Signum.Web.Dashboard
@using Signum.Entities.DynamicQuery
@using Signum.Entities.Chart
@using Signum.Web.Chart
@using Signum.Engine.Chart
@using Signum.Engine.DynamicQuery


@Html.ScriptCss("~/Chart/Content/Chart.css")

@using (var tc = Html.TypeContext<UserChartPartDN>())
{
    UserChartDN uc = tc.Value.UserChart;
    ChartRequest request = uc.ToRequest();

    using (var crc = new TypeContext<ChartRequest>(request, tc.Prefix))
    {
    <div id="@crc.Compose("sfChartControl")" class="sf-chart-control SF-control-container">
        <div style="display: none">
            @Html.HiddenRuntimeInfo(crc)
            @Html.Hidden(crc.Compose("sfOrders"), request.Orders.IsNullOrEmpty() ? "" :
                    (request.Orders.ToString(oo => (oo.OrderType == OrderType.Ascending ? "" : "-") + oo.Token.FullKey(), ";") + ";"))
            @{
        ViewData[ViewDataKeys.QueryDescription] = DynamicQueryManager.Current.QueryDescription(request.QueryName);
        ViewData[ViewDataKeys.FilterOptions] = request.Filters.Select(f => new FilterOption { Token = f.Token, Operation = f.Operation, Value = f.Value }).ToList();
            }
            @Html.Partial(Finder.Manager.FilterBuilderView, crc)
            <div id="@crc.Compose("sfChartBuilderContainer")" class="SF-control-container">
                @Html.Partial(ChartClient.ChartBuilderView, crc)
            </div>
            <script type="text/javascript">
                require(["@ChartClient.Module"], function (Chart) {
                    var options = @(MvcHtmlString.Create(uc.ToRequest().ToChartRequest(Url, tc.Prefix, tc.Value.ShowData ?  ChartRequestMode.data: ChartRequestMode.chart).ToString()));
                    new Chart.ChartRequest(options);
                 });
            </script>
        </div>    
        <div id="@Model.Compose("divResults")" class="sf-search-results-container">
            @JavascriptMessage.searchForResults.NiceToString()
        </div>
    </div>
    }
}
