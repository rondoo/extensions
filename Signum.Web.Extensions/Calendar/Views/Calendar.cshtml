@using System.Globalization
@using Signum.Web
@using Signum.Web.Calendar


@Html.ScriptCss("~/calendar/content/calendar.css")

@{
    DateTime startDate = ViewBag.StartDate;

    int daysToMove = ((int)startDate.DayOfWeek + 6) % 7;
    startDate = startDate.AddDays(-daysToMove);
    
    DateTime endDate = ViewBag.EndDate;
    Func<DateTime, int, HelperResult> cellTemplate = ViewBag.CellTemplate;
}

@if (!ViewData.ContainsKey("ShowSlider") || ViewBag.ShowSlider)
{ 
    <div class="sf-annual-calendar-slider">
    </div>
}

<table class="sf-annual-calendar">
    <thead>
        <tr>
            <th></th>
            <th>L</th>
            <th>M</th>
            <th>X</th>
            <th>J</th>
            <th>V</th>
            <th>S</th>
            <th>D</th>
        </tr>
    </thead>
    <tbody>
        @{ int max = (int)(endDate - startDate).TotalDays; }
        @for (int d = 0; d < max; d++)
        {
            <tr>
                <td class="sf-annual-calendar-month">
                    @{
            string month = CultureInfo.CurrentUICulture.DateTimeFormat.AbbreviatedMonthNames[startDate.AddDays(d).Month - 1];
            if (startDate.AddDays(d).Month != startDate.AddDays(d + 6).Month)
            {
                month += " " + CultureInfo.CurrentUICulture.DateTimeFormat.AbbreviatedMonthNames[startDate.AddDays(d).Month];
            }
                    }
                    @month
                </td>
                @for (int dow = 0; dow < 7; dow++)
                {
                    DateTime day = startDate.AddDays(d + dow);
                    <td data-date="@day.ToShortDateString()">
                        @cellTemplate(day, d + dow)
                    </td>
                }
                @{ d += 6; }
            </tr>    
        }
    </tbody>
</table>

<script>
    $(function () {
        @(CalendarClient.Modules["init"]())
    })
</script>

