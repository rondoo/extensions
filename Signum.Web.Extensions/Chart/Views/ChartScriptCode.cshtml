@using Signum.Entities.Chart
@using Signum.Web.Files
@using Signum.Engine
@using Signum.Web.Chart
@model TypeContext<ChartScriptDN>
@Html.ScriptCss(
    "~/Libs/CodeMirror/lib/codemirror.css",
    "~/Libs/CodeMirror/addon/dialog/dialog.css",
    "~/Libs/CodeMirror/addon/display/fullscreen.css",
    "~/Libs/CodeMirror/addon/hint/show-hint.css")
    <style type="text/css">
      .CodeMirror {
        border: 1px solid #eee;
      }
      
      span.CodeMirror-matchhighlight 
      { 
          background: #efefef
      }
      .CodeMirror-focused span.CodeMirror-matchhighlight 
      { 
          background: #efe7ff !important 
      }
      
      .exceptionLine {background: #FFFF00 !important;}
    </style>
    <pre style="color: Green; overflow-wrap: inherit;">
//var chart = d3.select('#sfChartControl .sf-chart-container').append('svg:svg').attr('width', width).attr('height', height))
//var data = { 
//              "columns": { "c0": { "title":"Product", "token":"Product", "isGroupKey":true, ... }, 
                             "c1": { "title":"Count", "token":"Count", "isGroupKey":true, ...} 
                          },
//              "rows": [ { "c0": { "key": "Product;1", "toStr": "Apple", "color": null }, "c1": { "key": "140", "toStr": "140" } },
//                        { "c0": { "key": "Product;2", "toStr": "Orange", "color": null }, "c1": { "key": "179", "toStr": "179" } }, ...
//                      ]
//           }
// DrawChart(chart, data);
// 
// Visit: http://d3js.org/
// Other functions defined in: \Chart\Scripts\ChartUtils.js
// use 'debugger' keyword or just throw JSON.stringify(myVariable)
// All yours!...
 </pre>
    @Html.ValueLine(Model, c => c.Script, vl => { vl.ValueLineType = ValueLineType.TextArea; vl.FormGroupStyle = FormGroupStyle.None; })
 
    <script>
        require(["@ChartClient.ModuleScript",
            "Libs/CodeMirror/lib/codemirror",
            "Libs/CodeMirror/mode/javascript/javascript",
            "Libs/CodeMirror/addon/comment/comment",
            "Libs/CodeMirror/addon/comment/continuecomment",
            "Libs/CodeMirror/addon/dialog/dialog",
            "Libs/CodeMirror/addon/display/fullscreen",
            "Libs/CodeMirror/addon/edit/closebrackets",
            "Libs/CodeMirror/addon/edit/matchbrackets",
            "Libs/CodeMirror/addon/hint/show-hint",
            "Libs/CodeMirror/addon/hint/javascript-hint",
            "Libs/CodeMirror/addon/search/match-highlighter",
            "Libs/CodeMirror/addon/search/search",
            "Libs/CodeMirror/addon/search/searchcursor",
        ], function (ChartScript, CodeMirror) {
            ChartScript.init($("#@(Model.Compose("Script"))"), CodeMirror);
        }); 
    </script>
